type Query {
  artist(id: ID!): Artist
  artists(limit: Int!, offset: Int!, filters: FilterArtistsInput): ArtistsPagination
}

type Mutation{
  createArtist(createArtistInput: CreateArtistInput!): Artist
  updateArtist(id: ID!, updateArtistInput: UpdateArtistInput!): Artist
  deleteArtist(id: ID!): Delete
}

type Artist {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band!]
  instruments: [String!]
}

type ArtistsPagination {
  items: [Artist!]
  offset: Int
  limit: Int
  total: Int
}

input CreateArtistInput {
  firstName: String!
  secondName: String!
  country: String!
  middleName: String
  birthDate: String
  birthPlace: String
  bands: [ID!]
  instruments: [String!]
}

input UpdateArtistInput {
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [ID!]
  instruments: [String!]
}

input FilterArtistsInput {
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
}
